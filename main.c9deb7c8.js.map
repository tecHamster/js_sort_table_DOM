{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","rows","tBodies","querySelectorAll","getNumFromString","str","replaceAll","tHead","addEventListener","e","target","tagName","index","parentElement","children","indexOf","sortValue","textContent","sortedRows","sort","row1","row2","row1Value","row2Value","localeCompare","append"],"mappings":";AAAA,aASA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAPA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAWH,EAAAA,EAAMI,QAAQ,GAAGC,iBAAiB,OAEnD,SAASC,EAAiBC,GACjB,OAACA,EAAIC,WAAW,QAAS,IAGlCR,EAAMS,MAAMC,iBAAiB,QAAS,SAACC,GACjCA,GAAqB,OAArBA,EAAEC,OAAOC,QAAkB,CAAA,IAAA,EACvBC,EAAQ,EAAIH,EAAEC,OAAOG,cAAcC,UAAUC,QAAQN,EAAEC,QACvDM,EAAYP,EAAEC,OAAOO,YAErBC,EAAajB,EAAKkB,KAAK,SAACC,EAAMC,GAC5BC,IAAAA,EAAYF,EAAKN,SAASF,GAAOK,YACjCM,EAAYF,EAAKP,SAASF,GAAOK,YAE/BD,OAAAA,GACD,IAAA,OACA,IAAA,WACIM,OAAAA,EAAUE,cAAcD,GAE5B,IAAA,MACA,IAAA,SACInB,OAAAA,EAAiBkB,GAAalB,EAAiBmB,OAI5DzB,EAAAA,EAAMI,QAAQ,IAAGuB,OAAUP,MAAAA,EAAAA,EAAAA","file":"main.c9deb7c8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst rows = [...table.tBodies[0].querySelectorAll('tr')];\n\nfunction getNumFromString(str) {\n  return +str.replaceAll(/\\D/gmi, '');\n}\n\ntable.tHead.addEventListener('click', (e) => {\n  if (e.target.tagName === 'TH') {\n    const index = [...e.target.parentElement.children].indexOf(e.target);\n    const sortValue = e.target.textContent;\n\n    const sortedRows = rows.sort((row1, row2) => {\n      const row1Value = row1.children[index].textContent;\n      const row2Value = row2.children[index].textContent;\n\n      switch (sortValue) {\n        case 'Name':\n        case 'Position':\n          return row1Value.localeCompare(row2Value);\n\n        case 'Age':\n        case 'Salary':\n          return getNumFromString(row1Value) - getNumFromString(row2Value);\n      }\n    });\n\n    table.tBodies[0].append(...sortedRows);\n  }\n});\n"]}